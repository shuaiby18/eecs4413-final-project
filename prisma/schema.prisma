generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum UserRole {
  USER
  ADMIN
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  emailVerified      DateTime?
  image              String?
  password           String?
  role               UserRole  @default(USER)
  isTwoFactorEnabled Boolean   @default(false)
  accounts           Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] 
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String?
  author      String
  categoryId  Int
  path        String
  thumbnail   String
  category    Category @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
}

model Brand {
  id    Int    @id @default(autoincrement())
  name  String
  products Product[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  userId    String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId]) 
}